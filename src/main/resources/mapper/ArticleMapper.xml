<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xh.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="xh.model.Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="cover_image" property="coverImage" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="view_count" property="viewCount" jdbcType="BIGINT" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="comment_count" property="commentCount" jdbcType="BIGINT" />

    <association property="author" resultMap="xh.mapper.UserMapper.BaseResultMap">
      <id column="user_id" property="id" jdbcType="BIGINT" />

    </association>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xh.model.Article" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (user_id, cover_image, category_id, 
      status, title, content, 
      view_count, created_at, updated_at
      )
    values (#{userId,jdbcType=BIGINT}, #{coverImage,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{viewCount,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="xh.model.Article" >
    update article
    set user_id = #{userId,jdbcType=BIGINT},
      cover_image = #{coverImage,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      view_count = #{viewCount,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="xh.model.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
        content = #{content,jdbcType=VARCHAR},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select a.id, a.user_id, a.cover_image, a.category_id, a.status, a.title, a.content, a.view_count,
           a.created_at, a.updated_at, u.username, u.nickname, u.avatar
    from article as a
    join user u on a.user_id = u.id
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap"  parameterType="java.lang.Long">
    select a.id, a.user_id, a.cover_image, a.category_id, a.status, a.title, a.content, a.view_count,
           a.created_at, a.updated_at, u.username, u.nickname, u.avatar, count(c.id) comment_count
    from article as a
        join user as u on a.user_id = u.id
        left join comment c on a.id = c.article_id
    group by a.id
  </select>

  <select id="queryByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select a.id, a.user_id, a.cover_image, a.category_id, a.status, a.title, a.content, a.view_count,
           a.created_at, a.updated_at
    from article as a
    where user_id=#{id,jdbcType=BIGINT}
  </select>

</mapper>















